{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "khojaADF0"
		},
		"LS_Azure_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Azure_SQL'"
		},
		"LS_storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_storage'"
		},
		"LS_rest_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jsonplaceholder.typicode.com"
		},
		"LS_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://khoja0.dfs.core.windows.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jsonplaceholder.typicode.com/posts"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/JSON_placeholder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupForTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_metadata_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Endpoint",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupForTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupForTables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Checking for READY status",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable source_endpoint",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(equals(item().status, 'Ready'))  ",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data from rest API",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "RestSource",
														"httpRequestTimeout": "00:01:40",
														"requestInterval": "00.00:00:00.010",
														"requestMethod": "GET",
														"paginationRules": {
															"supportRFC5988": "true"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"userId",
																"id"
															]
														},
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_rest_API_data",
														"type": "DatasetReference",
														"parameters": {
															"source_endpoint": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_to_copy_from_API",
														"type": "DatasetReference",
														"parameters": {
															"table_name": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Set status Success",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy data from rest API",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "source_row",
																	"type": "String",
																	"value": {
																		"value": "@variables('source_endpoint')",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "update meta_data\nset status  =  'Success'\nwhere target_table = @source_row"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "Set status Failed",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy data from rest API",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "source_row",
																	"type": "String",
																	"value": {
																		"value": "@variables('source_endpoint')",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "update meta_data\nset status  =  'Failed'\nwhere target_table = @source_row"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "Uptade last_run_date",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy data from rest API",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "source_row",
																	"type": "String",
																	"value": {
																		"value": "@variables('source_endpoint')",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "update meta_data\nset last_run_date  =  CAST( GETDATE() AS Date ) \nwhere target_table = @source_row"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "Write LOG",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Set status Failed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "current_table",
																	"type": "String",
																	"value": {
																		"value": "@variables('source_endpoint')",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "pipeline_name",
																	"type": "String",
																	"value": {
																		"value": "@pipeline().Pipeline",
																		"type": "Expression"
																	},
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "insert into adf_logs values('Failed to copy table', \n    (select last_run_date from meta_data where target_table = @current_table),\n    @pipeline_name,\n    @current_table\n)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								},
								{
									"name": "Set variable source_endpoint",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "source_endpoint",
										"value": {
											"value": "@item().target_table",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "LookupStatus",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach Endpoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select case when\n(select status from meta_data group by status having status = 'Success' and count(status)= count(target_table))\n= 'Success' then 'True' else 'False' end as status",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_metadata_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "All Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals('True', activity('LookupStatus').output.value[0].status)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait2",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Update status",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LS_Azure_SQL",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": "update meta_data\nset status  =  'Ready'"
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"source_endpoint": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-02-16T16:36:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_metadata_table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_rest_API_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_to_copy_from_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesData_archive_transform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata of Source",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_archive_name",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set variable zipName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata of Source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "zipName",
							"value": {
								"value": "@activity('Get Metadata of Source').output.childItems[0].name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data to temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable zipName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_sales_archive_copy",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@variables('zipName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_archive_locate_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Copy data to temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('fileNames')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to destination",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_archive_from_temp",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('zipName')",
													"type": "Expression"
												},
												"csvName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_archive_final_destination",
											"type": "DatasetReference",
											"parameters": {
												"csvFilneName": {
													"value": "@item()",
													"type": "Expression"
												},
												"zipName": {
													"value": "@variables('zipName')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"zipName": {
						"type": "String"
					},
					"fileNames": {
						"type": "Array",
						"defaultValue": [
							"customers",
							"orders",
							"products"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_archive_name')]",
				"[concat(variables('factoryId'), '/datasets/DS_sales_archive_copy')]",
				"[concat(variables('factoryId'), '/datasets/DS_archive_locate_temp')]",
				"[concat(variables('factoryId'), '/datasets/DS_archive_from_temp')]",
				"[concat(variables('factoryId'), '/datasets/DS_archive_final_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamic_copy_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_storage_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable fileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data inside files to SQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable fileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_for_copy",
											"type": "DatasetReference",
											"parameters": {
												"copy_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-02-12T08:43:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_storage_input')]",
				"[concat(variables('factoryId'), '/datasets/DS_for_copy')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "dynamic_copy_files"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "khoja0",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_archive_name')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SalesData_archife_transform"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "*",
							"type": "Expression"
						},
						"folderPath": "source",
						"fileSystem": "mydata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004\u0014\u0000\u0000\u0000\u0000\u0000zcTX\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0013\u0000 \u0000SalesData_20240220/UT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_for_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"copy_file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "dynamic_copy_files"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().copy_file_name",
							"type": "Expression"
						},
						"folderPath": "inputData",
						"fileSystem": "mydata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "close",
						"type": "String"
					},
					{
						"name": "volume",
						"type": "String"
					},
					{
						"name": "open",
						"type": "String"
					},
					{
						"name": "high",
						"type": "String"
					},
					{
						"name": "low",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_metadata_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "JSON_placeholder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "meta_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_rest_API_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_rest_API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_endpoint": {
						"type": "string",
						"defaultValue": "'/posts'"
					}
				},
				"folder": {
					"name": "JSON_placeholder"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/posts"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_rest_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sales_archive_copy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SalesData_archife_transform"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "source",
						"fileSystem": "mydata"
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_storage_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dynamic_copy_files"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "*",
							"type": "Expression"
						},
						"folderPath": "inputData",
						"fileSystem": "mydata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "_",
						"type": "String"
					},
					{
						"name": "Familiyasi",
						"type": "String"
					},
					{
						"name": "Ismi",
						"type": "String"
					},
					{
						"name": "Login",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					},
					{
						"name": "E-mail",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_to_copy_from_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "posts"
					}
				},
				"folder": {
					"name": "JSON_placeholder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Azure_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_Azure_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_rest_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_rest_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_archive_locate_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SalesData_archife_transform"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "descontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_archive_from_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"csvName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SalesData_archife_transform"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().csvName, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().fileName, '/', substring(dataset().fileName, 0, 18))",
							"type": "Expression"
						},
						"fileSystem": "descontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "phone",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					},
					{
						"name": "registered",
						"type": "String"
					},
					{
						"name": "orders",
						"type": "String"
					},
					{
						"name": "spent",
						"type": "String"
					},
					{
						"name": "job",
						"type": "String"
					},
					{
						"name": "hobbies",
						"type": "String"
					},
					{
						"name": "is_married",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_archive_final_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"csvFilneName": {
						"type": "string"
					},
					"zipName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().csvFilneName, substring(dataset().zipName, 9, 9), '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().csvFilneName, '/', substring(dataset().zipName, 10, 4), '/', substring(dataset().zipName, 14, 2))",
							"type": "Expression"
						},
						"fileSystem": "descontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "phone",
						"type": "String"
					},
					{
						"name": "address",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					},
					{
						"name": "registered",
						"type": "String"
					},
					{
						"name": "orders",
						"type": "String"
					},
					{
						"name": "spent",
						"type": "String"
					},
					{
						"name": "job",
						"type": "String"
					},
					{
						"name": "hobbies",
						"type": "String"
					},
					{
						"name": "is_married",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_storage')]"
			]
		}
	]
}