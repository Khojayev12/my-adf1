{
	"name": "JSON_placeholder",
	"properties": {
		"activities": [
			{
				"name": "LookupForTables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_metadata_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Endpoint",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupForTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupForTables').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Checking for READY status",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable source_endpoint",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().status, 'Ready'))  ",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data from rest API",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "upsert",
												"upsertSettings": {
													"useTempDB": true,
													"keys": [
														"userId",
														"id"
													]
												},
												"sqlWriterUseTableLock": false,
												"tableOption": "autoCreate",
												"disableMetricsCollection": false
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_rest_API_data",
												"type": "DatasetReference",
												"parameters": {
													"source_endpoint": {
														"value": "@variables('source_endpoint')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_to_copy_from_API",
												"type": "DatasetReference",
												"parameters": {
													"table_name": {
														"value": "@variables('source_endpoint')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set status Success",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Copy data from rest API",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "LS_Azure_SQL",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "source_row",
															"type": "String",
															"value": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															},
															"direction": "Input"
														}
													],
													"type": "Query",
													"text": "update meta_data\nset status  =  'Success'\nwhere target_table = @source_row"
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "Set status Failed",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Copy data from rest API",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "LS_Azure_SQL",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "source_row",
															"type": "String",
															"value": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															},
															"direction": "Input"
														}
													],
													"type": "Query",
													"text": "update meta_data\nset status  =  'Failed'\nwhere target_table = @source_row"
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "Uptade last_run_date",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Copy data from rest API",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "LS_Azure_SQL",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "source_row",
															"type": "String",
															"value": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															},
															"direction": "Input"
														}
													],
													"type": "Query",
													"text": "update meta_data\nset last_run_date  =  CAST( GETDATE() AS Date ) \nwhere target_table = @source_row"
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "Write LOG",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Set status Failed",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "LS_Azure_SQL",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "current_table",
															"type": "String",
															"value": {
																"value": "@variables('source_endpoint')",
																"type": "Expression"
															},
															"direction": "Input"
														},
														{
															"name": "pipeline_name",
															"type": "String",
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"direction": "Input"
														}
													],
													"type": "Query",
													"text": "insert into adf_logs values('Failed to copy table', \n    (select last_run_date from meta_data where target_table = @current_table),\n    @pipeline_name,\n    @current_table\n)"
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									}
								]
							}
						},
						{
							"name": "Set variable source_endpoint",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "source_endpoint",
								"value": {
									"value": "@item().target_table",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "LookupStatus",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach Endpoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select case when\n(select status from meta_data group by status having status = 'Success' and count(status)= count(target_table))\n= 'Success' then 'True' else 'False' end as status",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_metadata_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "All Success",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LookupStatus",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals('True', activity('LookupStatus').output.value[0].status)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait2",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Update status",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_Azure_SQL",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": "update meta_data\nset status  =  'Ready'"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"variables": {
			"source_endpoint": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-02-16T16:36:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}